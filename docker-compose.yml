version: '3.4'

name: ecommerce_project_backend

networks:
  default:
    driver: bridge

services:
  ecommerce.api:
    image: ${DOCKER_REGISTRY-}ecommerceapi
    container_name: ecommerce_api
    build:
      context: .
      dockerfile: ECommerce.Api/Dockerfile
    depends_on:
      - app_db
      - mail_dev
    environment:
      - ConnectionStrings__ECommerceConnectionString=Server=app_db;Port=5432;Database=ecommerce_db;User Id=postgres;Password=postgres;
      - ConnectionStrings__ECommerceIdentityConnectionString=Server=app_db;Port=5432;Database=ecommerce_db;User Id=postgres;Password=postgres;
    restart: always
    ports:
      - "8080:8080"
      - "8081:8081"
    networks:
      - default
  app_db:
    image: postgres:latest
    container_name: app_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ecommerce_db
    volumes:
      - app_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    networks:
      - default
  mail_dev:
     image: maildev/maildev:latest
     container_name: mail_dev
     restart: always
     environment:
       - MAILDEV_WEB_PORT=1080
       - MAILDEV_SMTP_PORT=1025
     ports:
       - "1080:1080"
       - "1025:1025"
     networks:
       - default

volumes:
  app_db_data:
    name: app_db_data
    driver: local